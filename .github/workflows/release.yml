name: Release

on:
  workflow_call:
    inputs:
      type:
        type: string
        description: "The release type, must be stable, beta, or alpha."
        default: "alpha"
      staging:
        type: boolean
        description: "Whether the release should be simulated or not."
        default: false
      branch:
        type: string
        description: "The branch to release from."
        default: "main"
      branch_version:
        type: string
        description: "The branch on unifier-version to bump."
        default: "main"
      pre_release:
        type: boolean
        description: "Whether the release should be a pre-release or not."
        default: false
      environment:
        type: string
        description: "The environment to release to."
        default: "Alpha release"
    secrets:
      DEPLOY_KEY:
        required: true

permissions:
  contents: write

jobs:
  validate-input:
    name: "Validate inputs"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Validate inputs
        run: "python3 ./scripts/validate.py ${{ inputs.type }} ${{ inputs.staging }}"

  create-release:
    name: "Create release"
    runs-on: ubuntu-latest
    needs: [validate-input]
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ inputs.branch }}
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
    - name: Get version
      run: |
        python3 ./scripts/get_version.py
    - name: Get release notes
      run: |
        {
          echo 'NOTES<<EOF'
          python3 ./scripts/get_notes.py '${{ env.VERSION }}'
          echo EOF
        } >> $GITHUB_ENV
    - name: Create GitHub release
      uses: elgohr/Github-Release-Action@v5
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        title: ${{ env.RAW_VERSION }}
        tag: ${{ env.VERSION }}
        prerelease: ${{ inputs.pre_release }}
  publish-release:
    name: "Publish release"
    runs-on: ubuntu-latest
    needs: [create-release]
    environment: ${{ inputs.environment }}
    if: ${{ inputs.staging == 'false' }}
    steps:
      - uses: actions/checkout@v4
        with:
          repository: 'UnifierHQ/unifier-version'
          ref: ${{ inputs.branch_version }}
          token: ${{ secrets.DEPLOY_KEY }}
      - name: Set up Git config
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "<>"
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Bump version
        run: |
          python3 ./scripts/bump.py
      - name: Push to repository
        run: |
          git add .
          git commit -m "Version bump to ${{ env.VERSION }}"
          git push
